# This file is @generated. To regenerate, run:
#    cargo run -p fixture-manager -- generate-hakari --fixture mnemos_b3b4da9

### BEGIN HAKARI SECTION
# resolver = 'install'
# unify-target-host = 'unify-if-both'
# output-single-feature = false
# dep-format-version = '1'
# workspace-hack-line-style = 'workspace-dotted'
# platforms = []
# [[traversal-excludes.ids]]
# name = 'schannel'
# version = '0.1.22'
# crates-io = true
#
# [[traversal-excludes.ids]]
# name = 'scoped-tls'
# version = '1.0.1'
# crates-io = true
#
# [[traversal-excludes.ids]]
# name = 'unicase'
# version = '2.7.0'
# crates-io = true
# [[final-excludes.ids]]
# name = 'console-subscriber'
# version = '0.1.10'
# crates-io = true
#
# [[final-excludes.ids]]
# name = 'dotenvy'
# version = '0.15.7'
# crates-io = true
#
# [[final-excludes.ids]]
# name = 'http-range-header'
# version = '0.3.1'
# crates-io = true
#
# [[final-excludes.ids]]
# name = 'matchers'
# version = '0.1.0'
# crates-io = true
#
# [[final-excludes.ids]]
# name = 'proptest-derive'
# version = '0.4.0'
# crates-io = true
#
# [[final-excludes.ids]]
# name = 'scoped_threadpool'
# version = '0.1.9'
# crates-io = true

[dependencies]
backtrace = { version = "0.3", features = ["gimli-symbolize", "std"] }
byteorder = { version = "1", features = ["std"] }
cobs = { version = "0.2", features = ["use_std"] }
cordyceps = { git = "https://github.com/hawkw/mycelium.git", rev = "101a4abaa19afdd131b334a16d92c9fb4909c064", features = ["alloc"] }
critical-section = { version = "1", default-features = false, features = ["restore-state-bool"] }
either = { version = "1", features = ["use_std"] }
embedded-hal = { version = "0.2", default-features = false, features = ["unproven"] }
futures = { version = "0.3", features = ["alloc", "async-await", "executor", "futures-executor", "std"] }
futures-channel = { version = "0.3", features = ["alloc", "futures-sink", "sink", "std"] }
futures-core = { version = "0.3", features = ["alloc", "std"] }
futures-io = { version = "0.3", features = ["std"] }
futures-sink = { version = "0.3", features = ["alloc", "std"] }
futures-task = { version = "0.3", default-features = false, features = ["alloc", "std"] }
futures-util = { version = "0.3", features = ["alloc", "async-await", "async-await-macro", "channel", "futures-channel", "futures-io", "futures-macro", "futures-sink", "io", "memchr", "sink", "slab", "std"] }
getrandom = { version = "0.2", default-features = false, features = ["std"] }
heapless = { version = "0.7", features = ["atomic-polyfill", "cas", "defmt", "defmt-impl", "serde"] }
hyper = { version = "0.14", features = ["client", "full", "h2", "http1", "http2", "runtime", "server", "socket2", "stream", "tcp"] }
libc = { version = "0.2", features = ["extra_traits", "std"] }
linked_list_allocator = { version = "0.10", default-features = false, features = ["const_mut_refs"] }
log = { version = "0.4", default-features = false, features = ["kv_unstable", "std", "value-bag"] }
maitake = { git = "https://github.com/hawkw/mycelium.git", rev = "101a4abaa19afdd131b334a16d92c9fb4909c064", features = ["alloc", "tracing-01"] }
memchr = { version = "2", features = ["std", "use_std"] }
miniz_oxide = { version = "0.7", default-features = false, features = ["with-alloc"] }
nb = { version = "0.1", default-features = false, features = ["unstable"] }
num-traits = { version = "0.2", features = ["i128", "libm", "std"] }
owo-colors = { version = "3", default-features = false, features = ["supports-color", "supports-colors"] }
percent-encoding = { version = "2", features = ["alloc", "std"] }
portable-atomic = { version = "1", features = ["critical-section", "fallback", "require-cas"] }
postcard = { version = "1", features = ["alloc", "const_format", "experimental-derive", "heapless", "heapless-cas", "postcard-derive", "use-std"] }
rand = { version = "0.8", features = ["alloc", "getrandom", "libc", "rand_chacha", "small_rng", "std", "std_rng"] }
regex = { version = "1", features = ["perf", "perf-backtrack", "perf-cache", "perf-dfa", "perf-inline", "perf-literal", "perf-onepass", "std", "unicode", "unicode-age", "unicode-bool", "unicode-case", "unicode-gencat", "unicode-perl", "unicode-script", "unicode-segment"] }
regex-automata-c65f7effa3be6d31 = { package = "regex-automata", version = "0.1", features = ["regex-syntax", "std"] }
regex-automata-468e82937335b1c9 = { package = "regex-automata", version = "0.3", default-features = false, features = ["alloc", "dfa-onepass", "hybrid", "meta", "nfa-backtrack", "nfa-pikevm", "nfa-thompson", "perf-inline", "perf-literal", "perf-literal-multisubstring", "perf-literal-substring", "std", "syntax", "unicode", "unicode-age", "unicode-bool", "unicode-case", "unicode-gencat", "unicode-perl", "unicode-script", "unicode-segment", "unicode-word-boundary"] }
regex-syntax = { version = "0.7", features = ["std", "unicode", "unicode-age", "unicode-bool", "unicode-case", "unicode-gencat", "unicode-perl", "unicode-script", "unicode-segment"] }
riscv = { version = "0.10", default-features = false, features = ["critical-section-single-hart"] }
scopeguard = { version = "1", features = ["use_std"] }
serde = { version = "1", features = ["alloc", "derive", "rc", "serde_derive", "std"] }
serde_json = { version = "1", features = ["std", "unbounded_depth"] }
tokio = { version = "1", features = ["bytes", "io-std", "io-util", "libc", "macros", "mio", "net", "num_cpus", "process", "rt", "rt-multi-thread", "signal", "signal-hook-registry", "socket2", "sync", "time", "tokio-macros", "tracing", "windows-sys"] }
toml_datetime = { version = "0.6", default-features = false, features = ["serde"] }
toml_edit = { version = "0.19", features = ["serde"] }
tracing = { version = "0.1", features = ["attributes", "std", "tracing-attributes"] }
tracing-core = { version = "0.1", features = ["once_cell", "std", "valuable"] }
tracing-serde-structured = { git = "https://github.com/hawkw/tracing-serde-structured", branch = "eliza/span-fields", features = ["std"] }
tracing-subscriber = { version = "0.3", features = ["alloc", "ansi", "env-filter", "fmt", "matchers", "nu-ansi-term", "once_cell", "regex", "registry", "sharded-slab", "smallvec", "std", "thread_local", "tracing", "tracing-log"] }
unicode-normalization = { version = "0.1", features = ["std"] }
uuid = { version = "1", features = ["getrandom", "rng", "serde", "std", "v4"] }

[build-dependencies]
backtrace = { version = "0.3", features = ["gimli-symbolize", "std"] }
byteorder = { version = "1", features = ["std"] }
cc = { version = "1", default-features = false, features = ["jobserver", "parallel"] }
cobs = { version = "0.2", features = ["use_std"] }
cordyceps = { git = "https://github.com/hawkw/mycelium.git", rev = "101a4abaa19afdd131b334a16d92c9fb4909c064", features = ["alloc"] }
critical-section = { version = "1", default-features = false, features = ["restore-state-bool"] }
either = { version = "1", features = ["use_std"] }
futures = { version = "0.3", features = ["alloc", "async-await", "executor", "futures-executor", "std"] }
futures-channel = { version = "0.3", features = ["alloc", "futures-sink", "sink", "std"] }
futures-core = { version = "0.3", features = ["alloc", "std"] }
futures-io = { version = "0.3", features = ["std"] }
futures-sink = { version = "0.3", features = ["alloc", "std"] }
futures-task = { version = "0.3", default-features = false, features = ["alloc", "std"] }
futures-util = { version = "0.3", features = ["alloc", "async-await", "async-await-macro", "channel", "futures-channel", "futures-io", "futures-macro", "futures-sink", "io", "memchr", "sink", "slab", "std"] }
getrandom = { version = "0.2", default-features = false, features = ["std"] }
heapless = { version = "0.7", features = ["atomic-polyfill", "cas", "defmt", "defmt-impl", "serde"] }
hyper = { version = "0.14", features = ["client", "full", "h2", "http1", "http2", "runtime", "server", "socket2", "stream", "tcp"] }
libc = { version = "0.2", features = ["extra_traits", "std"] }
linked_list_allocator = { version = "0.10", default-features = false, features = ["const_mut_refs"] }
log = { version = "0.4", default-features = false, features = ["kv_unstable", "std", "value-bag"] }
maitake = { git = "https://github.com/hawkw/mycelium.git", rev = "101a4abaa19afdd131b334a16d92c9fb4909c064", features = ["alloc", "tracing-01"] }
memchr = { version = "2", features = ["std", "use_std"] }
miniz_oxide = { version = "0.7", default-features = false, features = ["with-alloc"] }
num-traits = { version = "0.2", features = ["i128", "libm", "std"] }
owo-colors = { version = "3", default-features = false, features = ["supports-color", "supports-colors"] }
percent-encoding = { version = "2", features = ["alloc", "std"] }
portable-atomic = { version = "1", features = ["critical-section", "fallback", "require-cas"] }
postcard = { version = "1", features = ["alloc", "const_format", "experimental-derive", "heapless", "heapless-cas", "postcard-derive", "use-std"] }
rand = { version = "0.8", features = ["alloc", "getrandom", "libc", "rand_chacha", "small_rng", "std", "std_rng"] }
regex = { version = "1", features = ["perf", "perf-backtrack", "perf-cache", "perf-dfa", "perf-inline", "perf-literal", "perf-onepass", "std", "unicode", "unicode-age", "unicode-bool", "unicode-case", "unicode-gencat", "unicode-perl", "unicode-script", "unicode-segment"] }
regex-automata-c65f7effa3be6d31 = { package = "regex-automata", version = "0.1", features = ["regex-syntax", "std"] }
regex-automata-468e82937335b1c9 = { package = "regex-automata", version = "0.3", default-features = false, features = ["alloc", "dfa-onepass", "hybrid", "meta", "nfa-backtrack", "nfa-pikevm", "nfa-thompson", "perf-inline", "perf-literal", "perf-literal-multisubstring", "perf-literal-substring", "std", "syntax", "unicode", "unicode-age", "unicode-bool", "unicode-case", "unicode-gencat", "unicode-perl", "unicode-script", "unicode-segment", "unicode-word-boundary"] }
regex-syntax = { version = "0.7", features = ["std", "unicode", "unicode-age", "unicode-bool", "unicode-case", "unicode-gencat", "unicode-perl", "unicode-script", "unicode-segment"] }
semver = { version = "1", features = ["serde", "std"] }
serde = { version = "1", features = ["alloc", "derive", "rc", "serde_derive", "std"] }
serde_json = { version = "1", features = ["std", "unbounded_depth"] }
syn-dff4ba8e3ae991db = { package = "syn", version = "1", features = ["clone-impls", "derive", "extra-traits", "fold", "full", "parsing", "printing", "proc-macro", "quote", "visit"] }
syn-f595c2ba2a3f28df = { package = "syn", version = "2", features = ["clone-impls", "derive", "extra-traits", "full", "parsing", "printing", "proc-macro", "quote", "visit", "visit-mut"] }
tokio = { version = "1", features = ["bytes", "io-std", "io-util", "libc", "macros", "mio", "net", "num_cpus", "process", "rt", "rt-multi-thread", "signal", "signal-hook-registry", "socket2", "sync", "time", "tokio-macros", "tracing", "windows-sys"] }
toml_datetime = { version = "0.6", default-features = false, features = ["serde"] }
toml_edit = { version = "0.19", features = ["serde"] }
tracing = { version = "0.1", features = ["attributes", "std", "tracing-attributes"] }
tracing-core = { version = "0.1", features = ["once_cell", "std", "valuable"] }
tracing-serde-structured = { git = "https://github.com/hawkw/tracing-serde-structured", branch = "eliza/span-fields", features = ["std"] }
tracing-subscriber = { version = "0.3", features = ["alloc", "ansi", "env-filter", "fmt", "matchers", "nu-ansi-term", "once_cell", "regex", "registry", "sharded-slab", "smallvec", "std", "thread_local", "tracing", "tracing-log"] }
unicode-normalization = { version = "0.1", features = ["std"] }
uuid = { version = "1", features = ["getrandom", "rng", "serde", "std", "v4"] }

### END HAKARI SECTION

# This part of the file should be preserved at the end.
